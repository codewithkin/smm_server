generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id            String     @id @default(cuid())
  name          String
  address       String
  spent         Int?       @default(0)
  customerSince DateTime?  @default(now())
  lastPurchase  DateTime?  @default(now())
  purchases     Purchase[]
}

model Checkout {
  id        String     @id @default(uuid())
  total     Float
  createdAt DateTime   @default(now())
  items     CheckoutItem[]
}

model User {
  id        String     @id @default(uuid())
  username  String
  password  String
  role      String
  createdAt     DateTime   @default(now())
}

model CheckoutItem {
  id         String   @id @default(uuid())
  name       String
  price      Float
  quantity   Int
  productId  String
  checkout   Checkout @relation(fields: [checkoutId], references: [id])
  checkoutId String
}

model Product {
  id            String     @id @default(uuid())
  name          String
  slug          String     @unique
  brand         String
  category      String?    @default("Hello")
  description   String
  price         Float
  discountPrice Float? // optional, for promotions
  inStock       Int
  images        String[] // URLs of product images
  storage       String // e.g. "128GB"
  color         String
  network       String // e.g. "5G", "4G"
  simType       String // e.g. "Dual SIM", "Single SIM"
  condition     Condition
  isFeatured    Boolean?   @default(false)
  isNewArrival  Boolean?   @default(false)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  purchases     Purchase[]
}

enum Condition {
  New
  Refurbished
}

model Purchase {
  id         String   @id @default(uuid())
  quantity   Int
  price      Float
  customerId String
  productId  String
  customer   Customer @relation(fields: [customerId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
  createdAt  DateTime @default(now())
}
